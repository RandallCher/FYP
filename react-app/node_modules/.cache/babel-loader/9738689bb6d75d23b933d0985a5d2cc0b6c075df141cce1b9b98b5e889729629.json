{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\randa\\\\OneDrive\\\\Documents\\\\GitHub\\\\FYP\\\\react-app\\\\src\\\\components\\\\GraphGrid.js\";\nimport React from 'react';\nimport './GraphGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphGrid = ({\n  receiverPosition\n}) => {\n  const gridSize = 8; // Number of rows and columns\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"y-axis\",\n      children: [...Array(gridSize + 1)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"axis-label\",\n        children: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-and-x-axis\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-grid\",\n        children: [[...Array(gridSize * gridSize)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-cell\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"red-square\",\n          style: {\n            top: `calc(${receiverPosition.row} * 50px)`,\n            // Adjust cell size (50px here)\n            left: `calc(${receiverPosition.column} * 50px)`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"x-axis\",\n        children: [...Array(gridSize + 1)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"axis-label\",\n          children: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = GraphGrid;\nexport default GraphGrid;\nvar _c;\n$RefreshReg$(_c, \"GraphGrid\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GraphGrid","receiverPosition","gridSize","className","children","Array","map","_","index","fileName","_jsxFileName","lineNumber","columnNumber","style","top","row","left","column","_c","$RefreshReg$"],"sources":["C:/Users/randa/OneDrive/Documents/GitHub/FYP/react-app/src/components/GraphGrid.js"],"sourcesContent":["import React from 'react';\r\nimport './GraphGrid.css';\r\n\r\nconst GraphGrid = ({ receiverPosition }) => {\r\n  const gridSize = 8; // Number of rows and columns\r\n\r\n  return (\r\n    <div className=\"graph-container\">\r\n      {/* Render the Y-axis labels */}\r\n      <div className=\"y-axis\">\r\n        {[...Array(gridSize + 1)].map((_, index) => (\r\n          <div key={index} className=\"axis-label\">\r\n            {index}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"grid-and-x-axis\">\r\n        {/* Render the grid */}\r\n        <div className=\"graph-grid\">\r\n          {[...Array(gridSize * gridSize)].map((_, index) => (\r\n            <div key={index} className=\"grid-cell\"></div>\r\n          ))}\r\n          {/* Render the receiver position */}\r\n          <div\r\n            className=\"red-square\"\r\n            style={{\r\n              top: `calc(${receiverPosition.row} * 50px)`, // Adjust cell size (50px here)\r\n              left: `calc(${receiverPosition.column} * 50px)`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n\r\n        {/* Render the X-axis labels */}\r\n        <div className=\"x-axis\">\r\n          {[...Array(gridSize + 1)].map((_, index) => (\r\n            <div key={index} className=\"axis-label\">\r\n              {index}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphGrid;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAC1C,MAAMC,QAAQ,GAAG,CAAC,CAAC,CAAC;;EAEpB,oBACEH,OAAA;IAAKI,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAE9BL,OAAA;MAAKI,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpB,CAAC,GAAGC,KAAK,CAACH,QAAQ,GAAG,CAAC,CAAC,CAAC,CAACI,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACrCT,OAAA;QAAiBI,SAAS,EAAC,YAAY;QAAAC,QAAA,EACpCI;MAAK,GADEA,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENb,OAAA;MAAKI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAE9BL,OAAA;QAAKI,SAAS,EAAC,YAAY;QAAAC,QAAA,GACxB,CAAC,GAAGC,KAAK,CAACH,QAAQ,GAAGA,QAAQ,CAAC,CAAC,CAACI,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAC5CT,OAAA;UAAiBI,SAAS,EAAC;QAAW,GAA5BK,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CAC7C,CAAC,eAEFb,OAAA;UACEI,SAAS,EAAC,YAAY;UACtBU,KAAK,EAAE;YACLC,GAAG,EAAE,QAAQb,gBAAgB,CAACc,GAAG,UAAU;YAAE;YAC7CC,IAAI,EAAE,QAAQf,gBAAgB,CAACgB,MAAM;UACvC;QAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGNb,OAAA;QAAKI,SAAS,EAAC,QAAQ;QAAAC,QAAA,EACpB,CAAC,GAAGC,KAAK,CAACH,QAAQ,GAAG,CAAC,CAAC,CAAC,CAACI,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACrCT,OAAA;UAAiBI,SAAS,EAAC,YAAY;UAAAC,QAAA,EACpCI;QAAK,GADEA,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACM,EAAA,GAzCIlB,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}